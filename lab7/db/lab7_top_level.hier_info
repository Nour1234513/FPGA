|lab7_top_level
clock_50 => startup_reset:b_gen_pll:i_startup_reset.clk
clock_50 => cycloneV_pll:b_gen_pll:i_cyclonev_pll.refclk
key_n[0] => key_ctrl:key_ctrl.key_n[0]
key_n[1] => key_ctrl:key_ctrl.key_n[1]
key_n[2] => key_ctrl:key_ctrl.key_n[2]
key_n[3] => key_ctrl:key_ctrl.key_n[3]
fpga_in_rx => serial_uart:uart.rx
fpga_out_tx <= serial_uart:uart.tx
ledr[0] <= serial_uart:uart.received_error
ledr[1] <= <GND>
ledr[2] <= <GND>
ledr[3] <= <GND>
ledr[4] <= <GND>
ledr[5] <= <GND>
ledr[6] <= <GND>
ledr[7] <= <GND>
ledr[8] <= <GND>
ledr[9] <= <GND>
ledg[0] <= pwm_ctrl:pwm.led
ledg[1] <= <GND>
ledg[2] <= <GND>
ledg[3] <= <GND>
ledg[4] <= <GND>
ledg[5] <= <GND>
ledg[6] <= <GND>
ledg[7] <= <GND>
hex0_n[0] <= c_disp_ctrl:c_disp_ctrl.hex1[0]
hex0_n[1] <= c_disp_ctrl:c_disp_ctrl.hex1[1]
hex0_n[2] <= c_disp_ctrl:c_disp_ctrl.hex1[2]
hex0_n[3] <= c_disp_ctrl:c_disp_ctrl.hex1[3]
hex0_n[4] <= c_disp_ctrl:c_disp_ctrl.hex1[4]
hex0_n[5] <= c_disp_ctrl:c_disp_ctrl.hex1[5]
hex0_n[6] <= c_disp_ctrl:c_disp_ctrl.hex1[6]
hex1_n[0] <= c_disp_ctrl:c_disp_ctrl.hex2[0]
hex1_n[1] <= c_disp_ctrl:c_disp_ctrl.hex2[1]
hex1_n[2] <= c_disp_ctrl:c_disp_ctrl.hex2[2]
hex1_n[3] <= c_disp_ctrl:c_disp_ctrl.hex2[3]
hex1_n[4] <= c_disp_ctrl:c_disp_ctrl.hex2[4]
hex1_n[5] <= c_disp_ctrl:c_disp_ctrl.hex2[5]
hex1_n[6] <= c_disp_ctrl:c_disp_ctrl.hex2[6]
hex2_n[0] <= c_disp_ctrl:c_disp_ctrl.hex3[0]
hex2_n[1] <= c_disp_ctrl:c_disp_ctrl.hex3[1]
hex2_n[2] <= c_disp_ctrl:c_disp_ctrl.hex3[2]
hex2_n[3] <= c_disp_ctrl:c_disp_ctrl.hex3[3]
hex2_n[4] <= c_disp_ctrl:c_disp_ctrl.hex3[4]
hex2_n[5] <= c_disp_ctrl:c_disp_ctrl.hex3[5]
hex2_n[6] <= c_disp_ctrl:c_disp_ctrl.hex3[6]
hex3_n[0] <= <VCC>
hex3_n[1] <= <VCC>
hex3_n[2] <= <VCC>
hex3_n[3] <= <VCC>
hex3_n[4] <= <VCC>
hex3_n[5] <= <VCC>
hex3_n[6] <= <VCC>


|lab7_top_level|startup_reset:\b_gen_pll:i_startup_reset
clk => reset_cnt[0].CLK
clk => reset_cnt[1].CLK
clk => reset_cnt[2].CLK
clk => reset_cnt[3].CLK
clk => reset_cnt[4].CLK
clk => reset_cnt[5].CLK
clk => reset_cnt[6].CLK
clk => reset_cnt[7].CLK
clk => reset_cnt[8].CLK
clk => reset_cnt[9].CLK
clk => startup_reset_out_n~reg0.CLK
clk => startup_reset_out~reg0.CLK
startup_reset_out <= startup_reset_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
startup_reset_out_n <= startup_reset_out_n~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab7_top_level|cycloneV_pll:\b_gen_pll:i_cyclonev_pll
refclk => cycloneV_pll_0002:cyclonev_pll_inst.refclk
rst => cycloneV_pll_0002:cyclonev_pll_inst.rst
outclk_0 <= cycloneV_pll_0002:cyclonev_pll_inst.outclk_0
outclk_1 <= cycloneV_pll_0002:cyclonev_pll_inst.outclk_1
outclk_2 <= cycloneV_pll_0002:cyclonev_pll_inst.outclk_2
locked <= cycloneV_pll_0002:cyclonev_pll_inst.locked


|lab7_top_level|cycloneV_pll:\b_gen_pll:i_cyclonev_pll|cycloneV_pll_0002:cyclonev_pll_inst
refclk => refclk.IN1
rst => rst.IN1
outclk_0 <= altera_pll:altera_pll_i.outclk
outclk_1 <= altera_pll:altera_pll_i.outclk
outclk_2 <= altera_pll:altera_pll_i.outclk
locked <= altera_pll:altera_pll_i.locked


|lab7_top_level|cycloneV_pll:\b_gen_pll:i_cyclonev_pll|cycloneV_pll_0002:cyclonev_pll_inst|altera_pll:altera_pll_i
refclk => general[0].gpll.I_REFCLK
refclk => general[1].gpll.I_REFCLK
refclk => general[2].gpll.I_REFCLK
refclk1 => ~NO_FANOUT~
fbclk => ~NO_FANOUT~
rst => general[0].gpll.I_RST
rst => general[1].gpll.I_RST
rst => general[2].gpll.I_RST
phase_en => ~NO_FANOUT~
updn => ~NO_FANOUT~
num_phase_shifts[0] => ~NO_FANOUT~
num_phase_shifts[1] => ~NO_FANOUT~
num_phase_shifts[2] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
cntsel[0] => ~NO_FANOUT~
cntsel[1] => ~NO_FANOUT~
cntsel[2] => ~NO_FANOUT~
cntsel[3] => ~NO_FANOUT~
cntsel[4] => ~NO_FANOUT~
reconfig_to_pll[0] => ~NO_FANOUT~
reconfig_to_pll[1] => ~NO_FANOUT~
reconfig_to_pll[2] => ~NO_FANOUT~
reconfig_to_pll[3] => ~NO_FANOUT~
reconfig_to_pll[4] => ~NO_FANOUT~
reconfig_to_pll[5] => ~NO_FANOUT~
reconfig_to_pll[6] => ~NO_FANOUT~
reconfig_to_pll[7] => ~NO_FANOUT~
reconfig_to_pll[8] => ~NO_FANOUT~
reconfig_to_pll[9] => ~NO_FANOUT~
reconfig_to_pll[10] => ~NO_FANOUT~
reconfig_to_pll[11] => ~NO_FANOUT~
reconfig_to_pll[12] => ~NO_FANOUT~
reconfig_to_pll[13] => ~NO_FANOUT~
reconfig_to_pll[14] => ~NO_FANOUT~
reconfig_to_pll[15] => ~NO_FANOUT~
reconfig_to_pll[16] => ~NO_FANOUT~
reconfig_to_pll[17] => ~NO_FANOUT~
reconfig_to_pll[18] => ~NO_FANOUT~
reconfig_to_pll[19] => ~NO_FANOUT~
reconfig_to_pll[20] => ~NO_FANOUT~
reconfig_to_pll[21] => ~NO_FANOUT~
reconfig_to_pll[22] => ~NO_FANOUT~
reconfig_to_pll[23] => ~NO_FANOUT~
reconfig_to_pll[24] => ~NO_FANOUT~
reconfig_to_pll[25] => ~NO_FANOUT~
reconfig_to_pll[26] => ~NO_FANOUT~
reconfig_to_pll[27] => ~NO_FANOUT~
reconfig_to_pll[28] => ~NO_FANOUT~
reconfig_to_pll[29] => ~NO_FANOUT~
reconfig_to_pll[30] => ~NO_FANOUT~
reconfig_to_pll[31] => ~NO_FANOUT~
reconfig_to_pll[32] => ~NO_FANOUT~
reconfig_to_pll[33] => ~NO_FANOUT~
reconfig_to_pll[34] => ~NO_FANOUT~
reconfig_to_pll[35] => ~NO_FANOUT~
reconfig_to_pll[36] => ~NO_FANOUT~
reconfig_to_pll[37] => ~NO_FANOUT~
reconfig_to_pll[38] => ~NO_FANOUT~
reconfig_to_pll[39] => ~NO_FANOUT~
reconfig_to_pll[40] => ~NO_FANOUT~
reconfig_to_pll[41] => ~NO_FANOUT~
reconfig_to_pll[42] => ~NO_FANOUT~
reconfig_to_pll[43] => ~NO_FANOUT~
reconfig_to_pll[44] => ~NO_FANOUT~
reconfig_to_pll[45] => ~NO_FANOUT~
reconfig_to_pll[46] => ~NO_FANOUT~
reconfig_to_pll[47] => ~NO_FANOUT~
reconfig_to_pll[48] => ~NO_FANOUT~
reconfig_to_pll[49] => ~NO_FANOUT~
reconfig_to_pll[50] => ~NO_FANOUT~
reconfig_to_pll[51] => ~NO_FANOUT~
reconfig_to_pll[52] => ~NO_FANOUT~
reconfig_to_pll[53] => ~NO_FANOUT~
reconfig_to_pll[54] => ~NO_FANOUT~
reconfig_to_pll[55] => ~NO_FANOUT~
reconfig_to_pll[56] => ~NO_FANOUT~
reconfig_to_pll[57] => ~NO_FANOUT~
reconfig_to_pll[58] => ~NO_FANOUT~
reconfig_to_pll[59] => ~NO_FANOUT~
reconfig_to_pll[60] => ~NO_FANOUT~
reconfig_to_pll[61] => ~NO_FANOUT~
reconfig_to_pll[62] => ~NO_FANOUT~
reconfig_to_pll[63] => ~NO_FANOUT~
extswitch => ~NO_FANOUT~
adjpllin => ~NO_FANOUT~
cclk => ~NO_FANOUT~
outclk[0] <= general[0].gpll.O_OUTCLK
outclk[1] <= general[1].gpll.O_OUTCLK
outclk[2] <= general[2].gpll.O_OUTCLK
fboutclk <= general[0].gpll.O_FBOUTCLK
locked <= general[0].gpll.LOCKED
phase_done <= <GND>
reconfig_from_pll[0] <= <GND>
reconfig_from_pll[1] <= <GND>
reconfig_from_pll[2] <= <GND>
reconfig_from_pll[3] <= <GND>
reconfig_from_pll[4] <= <GND>
reconfig_from_pll[5] <= <GND>
reconfig_from_pll[6] <= <GND>
reconfig_from_pll[7] <= <GND>
reconfig_from_pll[8] <= <GND>
reconfig_from_pll[9] <= <GND>
reconfig_from_pll[10] <= <GND>
reconfig_from_pll[11] <= <GND>
reconfig_from_pll[12] <= <GND>
reconfig_from_pll[13] <= <GND>
reconfig_from_pll[14] <= <GND>
reconfig_from_pll[15] <= <GND>
reconfig_from_pll[16] <= <GND>
reconfig_from_pll[17] <= <GND>
reconfig_from_pll[18] <= <GND>
reconfig_from_pll[19] <= <GND>
reconfig_from_pll[20] <= <GND>
reconfig_from_pll[21] <= <GND>
reconfig_from_pll[22] <= <GND>
reconfig_from_pll[23] <= <GND>
reconfig_from_pll[24] <= <GND>
reconfig_from_pll[25] <= <GND>
reconfig_from_pll[26] <= <GND>
reconfig_from_pll[27] <= <GND>
reconfig_from_pll[28] <= <GND>
reconfig_from_pll[29] <= <GND>
reconfig_from_pll[30] <= <GND>
reconfig_from_pll[31] <= <GND>
reconfig_from_pll[32] <= <GND>
reconfig_from_pll[33] <= <GND>
reconfig_from_pll[34] <= <GND>
reconfig_from_pll[35] <= <GND>
reconfig_from_pll[36] <= <GND>
reconfig_from_pll[37] <= <GND>
reconfig_from_pll[38] <= <GND>
reconfig_from_pll[39] <= <GND>
reconfig_from_pll[40] <= <GND>
reconfig_from_pll[41] <= <GND>
reconfig_from_pll[42] <= <GND>
reconfig_from_pll[43] <= <GND>
reconfig_from_pll[44] <= <GND>
reconfig_from_pll[45] <= <GND>
reconfig_from_pll[46] <= <GND>
reconfig_from_pll[47] <= <GND>
reconfig_from_pll[48] <= <GND>
reconfig_from_pll[49] <= <GND>
reconfig_from_pll[50] <= <GND>
reconfig_from_pll[51] <= <GND>
reconfig_from_pll[52] <= <GND>
reconfig_from_pll[53] <= <GND>
reconfig_from_pll[54] <= <GND>
reconfig_from_pll[55] <= <GND>
reconfig_from_pll[56] <= <GND>
reconfig_from_pll[57] <= <GND>
reconfig_from_pll[58] <= <GND>
reconfig_from_pll[59] <= <GND>
reconfig_from_pll[60] <= <GND>
reconfig_from_pll[61] <= <GND>
reconfig_from_pll[62] <= <GND>
reconfig_from_pll[63] <= <GND>
activeclk <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
phout[0] <= <GND>
phout[1] <= <GND>
phout[2] <= <GND>
phout[3] <= <GND>
phout[4] <= <GND>
phout[5] <= <GND>
phout[6] <= <GND>
phout[7] <= <GND>
lvds_clk[0] <= <GND>
lvds_clk[1] <= <GND>
loaden[0] <= <GND>
loaden[1] <= <GND>
extclk_out[0] <= <GND>
extclk_out[1] <= <GND>
cascade_out[0] <= <GND>
cascade_out[1] <= <GND>
cascade_out[2] <= <GND>
zdbfbclk <> <GND>


|lab7_top_level|reset_ctrl:\b_gen_pll:i_reset_ctrl
clk => reset_cnt[0].CLK
clk => reset_cnt[1].CLK
clk => reset_cnt[2].CLK
clk => reset_cnt[3].CLK
clk => reset_cnt[4].CLK
clk => reset_cnt[5].CLK
clk => reset_cnt[6].CLK
clk => reset_out_n~reg0.CLK
clk => reset_out~reg0.CLK
reset_in => p_reset_ctrl.IN0
reset_in_n => p_reset_ctrl.IN1
reset_out <= reset_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset_out_n <= reset_out_n~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab7_top_level|key_ctrl:key_ctrl
clk => cnt_enabled_t.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => key_down~reg0.CLK
clk => key_up~reg0.CLK
clk => key_on~reg0.CLK
clk => key_off~reg0.CLK
clk => key_n_r2[0].CLK
clk => key_n_r2[1].CLK
clk => key_n_r2[2].CLK
clk => key_n_r2[3].CLK
clk => key_n_r[0].CLK
clk => key_n_r[1].CLK
clk => key_n_r[2].CLK
clk => key_n_r[3].CLK
key_n[0] => key_n_r[0].DATAIN
key_n[1] => key_n_r[1].DATAIN
key_n[2] => key_n_r[2].DATAIN
key_n[3] => key_n_r[3].DATAIN
key_on <= key_on~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_off <= key_off~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_up <= key_up~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_down <= key_down~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab7_top_level|serial_ctrl:serial_ctrl
clk => key_down~reg0.CLK
clk => key_up~reg0.CLK
clk => key_on~reg0.CLK
clk => key_off~reg0.CLK
reset => key_off.OUTPUTSELECT
reset => key_on.OUTPUTSELECT
reset => key_up.OUTPUTSELECT
reset => key_down.OUTPUTSELECT
received_data[0] => Mux0.IN263
received_data[0] => Mux1.IN263
received_data[0] => Mux2.IN134
received_data[0] => Mux3.IN134
received_data[1] => Mux0.IN262
received_data[1] => Mux1.IN262
received_data[1] => Mux2.IN133
received_data[1] => Mux3.IN133
received_data[2] => Mux0.IN261
received_data[2] => Mux1.IN261
received_data[2] => Mux2.IN132
received_data[2] => Mux3.IN132
received_data[3] => Mux0.IN260
received_data[3] => Mux1.IN260
received_data[3] => Mux2.IN131
received_data[3] => Mux3.IN131
received_data[4] => Mux0.IN259
received_data[4] => Mux1.IN259
received_data[4] => Mux2.IN130
received_data[4] => Mux3.IN130
received_data[5] => Mux0.IN258
received_data[5] => Mux1.IN258
received_data[6] => Mux0.IN257
received_data[6] => Mux1.IN257
received_data[6] => Mux2.IN129
received_data[6] => Mux3.IN129
received_data[7] => Mux0.IN256
received_data[7] => Mux1.IN256
received_data[7] => Mux2.IN128
received_data[7] => Mux3.IN128
received_data_valid => key_off.OUTPUTSELECT
received_data_valid => key_on.OUTPUTSELECT
received_data_valid => key_up.OUTPUTSELECT
received_data_valid => key_down.OUTPUTSELECT
key_on <= key_on~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_off <= key_off~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_up <= key_up~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_down <= key_down~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab7_top_level|serial_uart:uart
clk => tx_bit_cnt[0].CLK
clk => tx_bit_cnt[1].CLK
clk => tx_bit_cnt[2].CLK
clk => tx_bit_cnt[3].CLK
clk => tx_bit_cnt[4].CLK
clk => tx_bit_cnt[5].CLK
clk => tx_bit_cnt[6].CLK
clk => tx_bit_cnt[7].CLK
clk => tx_bit_cnt[8].CLK
clk => tx_bit_cnt_wrap.CLK
clk => rx_bit_cnt[0].CLK
clk => rx_bit_cnt[1].CLK
clk => rx_bit_cnt[2].CLK
clk => rx_bit_cnt[3].CLK
clk => rx_bit_cnt[4].CLK
clk => rx_bit_cnt[5].CLK
clk => rx_bit_cnt[6].CLK
clk => rx_bit_cnt[7].CLK
clk => rx_bit_cnt[8].CLK
clk => rx_bit_cnt_half.CLK
clk => rx_bit_cnt_wrap.CLK
clk => tx~reg0.CLK
clk => tx_bit_no[0].CLK
clk => tx_bit_no[1].CLK
clk => tx_bit_no[2].CLK
clk => transmit_ready_int.CLK
clk => tx_byte_saved[0].CLK
clk => tx_byte_saved[1].CLK
clk => tx_byte_saved[2].CLK
clk => tx_byte_saved[3].CLK
clk => tx_byte_saved[4].CLK
clk => tx_byte_saved[5].CLK
clk => tx_byte_saved[6].CLK
clk => tx_byte_saved[7].CLK
clk => tx_parity_bit.CLK
clk => tx_bit_cnt_en.CLK
clk => received_error~reg0.CLK
clk => received_parity_error~reg0.CLK
clk => received_data[0]~reg0.CLK
clk => received_data[1]~reg0.CLK
clk => received_data[2]~reg0.CLK
clk => received_data[3]~reg0.CLK
clk => received_data[4]~reg0.CLK
clk => received_data[5]~reg0.CLK
clk => received_data[6]~reg0.CLK
clk => received_data[7]~reg0.CLK
clk => rx_parity_toggle.CLK
clk => rx_bit_no[0].CLK
clk => rx_bit_no[1].CLK
clk => rx_bit_no[2].CLK
clk => rx_byte_int[0].CLK
clk => rx_byte_int[1].CLK
clk => rx_byte_int[2].CLK
clk => rx_byte_int[3].CLK
clk => rx_byte_int[4].CLK
clk => rx_byte_int[5].CLK
clk => rx_byte_int[6].CLK
clk => rx_bit_cnt_en.CLK
clk => received_data_valid~reg0.CLK
clk => reset_2r.CLK
clk => reset_r.CLK
clk => rx_2r.CLK
clk => rx_r.CLK
clk => tx_state~1.DATAIN
clk => rx_state~5.DATAIN
reset => reset_r.DATAIN
rx => rx_r.DATAIN
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[0] <= received_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[1] <= received_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[2] <= received_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[3] <= received_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[4] <= received_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[5] <= received_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[6] <= received_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[7] <= received_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data_valid <= received_data_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_error <= received_error~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_parity_error <= received_parity_error~reg0.DB_MAX_OUTPUT_PORT_TYPE
transmit_ready <= transmit_ready_int.DB_MAX_OUTPUT_PORT_TYPE
transmit_data_valid => p_tx_data.IN1
transmit_data[0] => tx_byte_saved.DATAB
transmit_data[1] => tx_byte_saved.DATAB
transmit_data[2] => tx_byte_saved.DATAB
transmit_data[3] => tx_byte_saved.DATAB
transmit_data[4] => tx_byte_saved.DATAB
transmit_data[5] => tx_byte_saved.DATAB
transmit_data[6] => tx_byte_saved.DATAB
transmit_data[7] => tx_byte_saved.DATAB


|lab7_top_level|pwm_ctrl:pwm
clk => current_dc_update~reg0.CLK
clk => previous_duty_cycle[0].CLK
clk => previous_duty_cycle[1].CLK
clk => previous_duty_cycle[2].CLK
clk => previous_duty_cycle[3].CLK
clk => previous_duty_cycle[4].CLK
clk => previous_duty_cycle[5].CLK
clk => previous_duty_cycle[6].CLK
clk => led_on_off.CLK
clk => pwm_counter[0].CLK
clk => pwm_counter[1].CLK
clk => pwm_counter[2].CLK
clk => pwm_counter[3].CLK
clk => pwm_counter[4].CLK
clk => pwm_counter[5].CLK
clk => pwm_counter[6].CLK
clk => pwm_counter[7].CLK
clk => pwm_counter[8].CLK
clk => pwm_counter[9].CLK
clk => pwm_counter[10].CLK
clk => pwm_counter[11].CLK
clk => pwm_counter[12].CLK
clk => pwm_counter[13].CLK
clk => pwm_counter[14].CLK
clk => pwm_counter[15].CLK
clk => duty_cycle[0].CLK
clk => duty_cycle[1].CLK
clk => duty_cycle[2].CLK
clk => duty_cycle[3].CLK
clk => duty_cycle[4].CLK
clk => duty_cycle[5].CLK
clk => duty_cycle[6].CLK
clk => \p_main:pwm_active.CLK
clk => pwm_state~7.DATAIN
led <= led_on_off.DB_MAX_OUTPUT_PORT_TYPE
reset => current_dc_update~reg0.PRESET
reset => previous_duty_cycle[0].ACLR
reset => previous_duty_cycle[1].ACLR
reset => previous_duty_cycle[2].PRESET
reset => previous_duty_cycle[3].ACLR
reset => previous_duty_cycle[4].ACLR
reset => previous_duty_cycle[5].PRESET
reset => previous_duty_cycle[6].PRESET
reset => led_on_off.ACLR
reset => duty_cycle[0].ACLR
reset => duty_cycle[1].ACLR
reset => duty_cycle[2].ACLR
reset => duty_cycle[3].ACLR
reset => duty_cycle[4].ACLR
reset => duty_cycle[5].ACLR
reset => duty_cycle[6].ACLR
reset => \p_main:pwm_active.ACLR
reset => pwm_state~9.DATAIN
key_on_A => p_main.IN0
key_off_A => p_main.IN0
key_up_A => p_main.IN0
key_down_A => p_main.IN0
key_on_C => p_main.IN1
key_off_C => p_main.IN1
key_up_C => p_main.IN1
key_down_C => p_main.IN1
current_dc[0] <= duty_cycle[0].DB_MAX_OUTPUT_PORT_TYPE
current_dc[1] <= duty_cycle[1].DB_MAX_OUTPUT_PORT_TYPE
current_dc[2] <= duty_cycle[2].DB_MAX_OUTPUT_PORT_TYPE
current_dc[3] <= duty_cycle[3].DB_MAX_OUTPUT_PORT_TYPE
current_dc[4] <= duty_cycle[4].DB_MAX_OUTPUT_PORT_TYPE
current_dc[5] <= duty_cycle[5].DB_MAX_OUTPUT_PORT_TYPE
current_dc[6] <= duty_cycle[6].DB_MAX_OUTPUT_PORT_TYPE
current_dc[7] <= <GND>
current_dc_update <= current_dc_update~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab7_top_level|c_disp_ctrl:c_disp_ctrl
clk => bcd_decode_rom:bcd.clk
clk => wait_one_clockCycle.CLK
clk => send_x[0].CLK
clk => send_x[1].CLK
clk => send_x[2].CLK
clk => first_valuable_nummber_detected.CLK
clk => transmit_data[0]~reg0.CLK
clk => transmit_data[1]~reg0.CLK
clk => transmit_data[2]~reg0.CLK
clk => transmit_data[3]~reg0.CLK
clk => transmit_data[4]~reg0.CLK
clk => transmit_data[5]~reg0.CLK
clk => transmit_data[6]~reg0.CLK
clk => transmit_data[7]~reg0.CLK
clk => transmit_valid~reg0.CLK
clk => send_data.CLK
clk => myArray[2][0].CLK
clk => myArray[2][1].CLK
clk => myArray[2][2].CLK
clk => myArray[2][3].CLK
clk => myArray[2][4].CLK
clk => myArray[2][5].CLK
clk => myArray[2][6].CLK
clk => myArray[2][7].CLK
clk => myArray[1][0].CLK
clk => myArray[1][1].CLK
clk => myArray[1][2].CLK
clk => myArray[1][3].CLK
clk => myArray[1][4].CLK
clk => myArray[1][5].CLK
clk => myArray[1][6].CLK
clk => myArray[1][7].CLK
clk => myArray[0][0].CLK
clk => myArray[0][1].CLK
clk => myArray[0][2].CLK
clk => myArray[0][3].CLK
clk => myArray[0][4].CLK
clk => myArray[0][5].CLK
clk => myArray[0][6].CLK
clk => myArray[0][7].CLK
clk => hex3[0]~reg0.CLK
clk => hex3[1]~reg0.CLK
clk => hex3[2]~reg0.CLK
clk => hex3[3]~reg0.CLK
clk => hex3[4]~reg0.CLK
clk => hex3[5]~reg0.CLK
clk => hex3[6]~reg0.CLK
clk => hex2[0]~reg0.CLK
clk => hex2[1]~reg0.CLK
clk => hex2[2]~reg0.CLK
clk => hex2[3]~reg0.CLK
clk => hex2[4]~reg0.CLK
clk => hex2[5]~reg0.CLK
clk => hex2[6]~reg0.CLK
clk => hex1[0]~reg0.CLK
clk => hex1[1]~reg0.CLK
clk => hex1[2]~reg0.CLK
clk => hex1[3]~reg0.CLK
clk => hex1[4]~reg0.CLK
clk => hex1[5]~reg0.CLK
clk => hex1[6]~reg0.CLK
reset => bcd_decode_rom:bcd.reset
reset => wait_one_clockCycle.ACLR
reset => send_x[0].ACLR
reset => send_x[1].ACLR
reset => send_x[2].ACLR
reset => send_data.ACLR
reset => hex3[0]~reg0.PRESET
reset => hex3[1]~reg0.PRESET
reset => hex3[2]~reg0.PRESET
reset => hex3[3]~reg0.PRESET
reset => hex3[4]~reg0.PRESET
reset => hex3[5]~reg0.PRESET
reset => hex3[6]~reg0.PRESET
reset => hex2[0]~reg0.PRESET
reset => hex2[1]~reg0.PRESET
reset => hex2[2]~reg0.PRESET
reset => hex2[3]~reg0.PRESET
reset => hex2[4]~reg0.PRESET
reset => hex2[5]~reg0.PRESET
reset => hex2[6]~reg0.PRESET
reset => hex1[0]~reg0.PRESET
reset => hex1[1]~reg0.PRESET
reset => hex1[2]~reg0.PRESET
reset => hex1[3]~reg0.PRESET
reset => hex1[4]~reg0.PRESET
reset => hex1[5]~reg0.PRESET
reset => hex1[6]~reg0.PRESET
current_dc[0] => bcd_decode_rom:bcd.input_vector[0]
current_dc[1] => bcd_decode_rom:bcd.input_vector[1]
current_dc[2] => bcd_decode_rom:bcd.input_vector[2]
current_dc[3] => bcd_decode_rom:bcd.input_vector[3]
current_dc[4] => bcd_decode_rom:bcd.input_vector[4]
current_dc[5] => bcd_decode_rom:bcd.input_vector[5]
current_dc[6] => bcd_decode_rom:bcd.input_vector[6]
current_dc[7] => bcd_decode_rom:bcd.input_vector[7]
current_dc_update => bcd_decode_rom:bcd.valid_in
hex1[0] <= hex1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[1] <= hex1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[2] <= hex1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[3] <= hex1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[4] <= hex1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[5] <= hex1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[6] <= hex1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[0] <= hex2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[1] <= hex2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[2] <= hex2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[3] <= hex2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[4] <= hex2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[5] <= hex2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[6] <= hex2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[0] <= hex3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[1] <= hex3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[2] <= hex3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[3] <= hex3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[4] <= hex3[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[5] <= hex3[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[6] <= hex3[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
transmit_data[0] <= transmit_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
transmit_data[1] <= transmit_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
transmit_data[2] <= transmit_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
transmit_data[3] <= transmit_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
transmit_data[4] <= transmit_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
transmit_data[5] <= transmit_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
transmit_data[6] <= transmit_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
transmit_data[7] <= transmit_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
transmit_valid <= transmit_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
transmit_ready => transmit_data.OUTPUTSELECT
transmit_ready => transmit_data.OUTPUTSELECT
transmit_ready => transmit_data.OUTPUTSELECT
transmit_ready => transmit_data.OUTPUTSELECT
transmit_ready => transmit_data.OUTPUTSELECT
transmit_ready => transmit_data.OUTPUTSELECT
transmit_ready => transmit_data.OUTPUTSELECT
transmit_ready => transmit_data.OUTPUTSELECT
transmit_ready => first_valuable_nummber_detected.OUTPUTSELECT
transmit_ready => send_x.OUTPUTSELECT
transmit_ready => send_x.OUTPUTSELECT
transmit_ready => send_x.OUTPUTSELECT
transmit_ready => wait_one_clockCycle.OUTPUTSELECT
transmit_ready => send_data.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => myArray.OUTPUTSELECT
transmit_ready => transmit_valid.DATAB


|lab7_top_level|c_disp_ctrl:c_disp_ctrl|bcd_decode_rom:bcd
clk => rom_data_valid.CLK
clk => rom_data[0].CLK
clk => rom_data[1].CLK
clk => rom_data[2].CLK
clk => rom_data[3].CLK
clk => rom_data[4].CLK
clk => rom_data[5].CLK
clk => rom_data[6].CLK
clk => rom_data[7].CLK
clk => rom_data[8].CLK
clk => rom_data[9].CLK
clk => rom_addr[0].CLK
clk => rom_addr[1].CLK
clk => rom_addr[2].CLK
clk => rom_addr[3].CLK
clk => rom_addr[4].CLK
clk => rom_addr[5].CLK
clk => rom_addr[6].CLK
clk => rom_addr[7].CLK
clk => addr_valid.CLK
clk => ready~reg0.CLK
reset => ready~reg0.DATAIN
input_vector[0] => rom_addr.DATAB
input_vector[1] => rom_addr.DATAB
input_vector[2] => rom_addr.DATAB
input_vector[3] => rom_addr.DATAB
input_vector[4] => rom_addr.DATAB
input_vector[5] => rom_addr.DATAB
input_vector[6] => rom_addr.DATAB
input_vector[7] => rom_addr.DATAB
valid_in => rom_addr.OUTPUTSELECT
valid_in => rom_addr.OUTPUTSELECT
valid_in => rom_addr.OUTPUTSELECT
valid_in => rom_addr.OUTPUTSELECT
valid_in => rom_addr.OUTPUTSELECT
valid_in => rom_addr.OUTPUTSELECT
valid_in => rom_addr.OUTPUTSELECT
valid_in => rom_addr.OUTPUTSELECT
valid_in => addr_valid.DATAIN
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
bcd_0[0] <= rom_data[0].DB_MAX_OUTPUT_PORT_TYPE
bcd_0[1] <= rom_data[1].DB_MAX_OUTPUT_PORT_TYPE
bcd_0[2] <= rom_data[2].DB_MAX_OUTPUT_PORT_TYPE
bcd_0[3] <= rom_data[3].DB_MAX_OUTPUT_PORT_TYPE
bcd_1[0] <= rom_data[4].DB_MAX_OUTPUT_PORT_TYPE
bcd_1[1] <= rom_data[5].DB_MAX_OUTPUT_PORT_TYPE
bcd_1[2] <= rom_data[6].DB_MAX_OUTPUT_PORT_TYPE
bcd_1[3] <= rom_data[7].DB_MAX_OUTPUT_PORT_TYPE
bcd_2[0] <= rom_data[8].DB_MAX_OUTPUT_PORT_TYPE
bcd_2[1] <= rom_data[9].DB_MAX_OUTPUT_PORT_TYPE
bcd_2[2] <= <GND>
bcd_2[3] <= <GND>
valid_out <= rom_data_valid.DB_MAX_OUTPUT_PORT_TYPE


